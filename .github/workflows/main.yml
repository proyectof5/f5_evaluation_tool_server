name: Dockerized CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER  }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          DATABASE_PORT: 3308  # Changed port here
        ports:
          - 3308:3306  # Changed port here

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Crear archivo .env con secrets
        run: |
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" > .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
          echo "MYSQL_PORT=3306" >> .env
          echo "WEB_PORT=8010" >> .env

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build Docker images
        run: docker-compose -f docker-compose.yaml build

      - name: Run Migrations
        env:
          DATABASE_URL: mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@${{ secrets.MYSQL_HOST }}:3308/${{ secrets.MYSQL_DATABASE }}  # Changed port here
          DATABASE_PORT: 3308  # Changed port here
          WEB_PORT: 8010
        run: docker-compose -f docker-compose.yaml run --rm web python manage.py migrate

      - name: Run Tests
        env:
          DATABASE_URL: mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@${{ secrets.MYSQL_HOST }}:${{ secrets.DATABASE_PORT }}/${{ secrets.MYSQL_DATABASE }}  # Changed port here
          DATABASE_PORT: 3308  # Changed port here
          WEB_PORT: 8010
        run: docker-compose -f docker-compose.yaml run --rm web python manage.py test

  deploy:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t f5_evaluation_tool_server:latest .
    
      - name: Tag Docker image
        run: docker tag f5_evaluation_tool_server:latest ${{ secrets.DOCKER_USERNAME }}/f5_evaluation_tool_server:latest
    
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/f5_evaluation_tool_server:latest